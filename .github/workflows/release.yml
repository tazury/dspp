name: Create Release from Projects

on:
  push:
    branches:
      - latest
  workflow_run:
    workflows: ["Build All (OSX)", "Build All (Linux)", "Build All (Windows)"]
    types:
      - completed

jobs:
  build-platform:
    if: contains(github.event.head_commit.message, '$Release[')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux, windows, osx]

    outputs:
      version: ${{ steps.extract.outputs.version }}

    steps:
      - name: Extract Version from Commit Message
        id: extract
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oP '\$Release\[\K[^\]]+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - name: Download DSPP Artifact
        uses: actions/download-artifact@v4
        with:
          name: dspp-${{ matrix.platform }}-build
          path: release

      - name: Create ZIP for ${{ matrix.platform }}
        run: |
          cd release
          zip -r ../dspp-${{ matrix.platform }}-${{ env.VERSION }}.zip .

      - name: Upload ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dspp-${{ matrix.platform }}-zip
          path: dspp-${{ matrix.platform }}-${{ env.VERSION }}.zip

  release:
    needs: build-platform
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download All Zips
        uses: actions/download-artifact@v4
        with:
          path: zips

      - name: Flatten ZIPs directory
        run: |
          mkdir final_zips
          find zips -name "*.zip" -exec mv {} final_zips/ \;

      - name: Read release body from README
        id: readme
        run: echo "body<<EOF" >> $GITHUB_ENV && cat README.md >> $GITHUB_ENV && echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: DSPP Release ${{ needs.build-platform.outputs.version }}
          tag_name: release-${{ needs.build-platform.outputs.version }}
          files: final_zips/*.zip
          body: ${{ env.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
